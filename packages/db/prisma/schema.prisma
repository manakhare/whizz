// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @unique @default(autoincrement())
  username String
  email String @unique
  password String 
  zap Zap[]
}

model Zap {
  id String @id @default(uuid())
  user User @relation(fields: [userId], references: [id])
  userId Int
  trigger Trigger?
  actions Action[]
  zap ZapRun[]
}

model Trigger {
  id String @id @default(uuid())
  zap Zap @relation(fields: [zapId], references: [id])
  zapId String @unique
  type AvailableTrigger @relation(fields: [triggerId], references: [id])
  triggerId String
  metadata Json @default("{}")
}

model AvailableTrigger {
  id String @id @default(uuid())
  trigger Trigger[]
  triggerName String
}

model Action {
  id String @id @default(uuid())
  zap Zap @relation(fields: [zapId], references: [id])
  zapId String
  type AvailableAction @relation(fields: [actionId], references: [id])
  actionId String 
  metadata Json @default("{}")
  sortingOrder Int @default(0)
}

model AvailableAction {
  id String @id @default(uuid())
  actions Action[]
  actionName String
}

model ZapRun {
  id String @id @default(uuid())
  metadata Json
  zapId String
  zap Zap @relation(fields: [zapId], references: [id])
  zapRunOutBox ZapRunOutbox?
}

model ZapRunOutbox {
  id String @id @default(uuid())
  zapRunId String @unique
  zapRun ZapRun @relation(fields: [zapRunId], references: [id])
}